@model IEnumerable<PTracking.Models.Project>

@{
    ViewData["Title"] = "Index";
    var uniqueMonths = ViewBag.UniqueMonths as List<string>;
    var numOfProjects = ViewBag.NumOfProjects as List<int>;
}


<head>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.css" />

</head>
<body>

<div class="row">
    <div class="col-sm-3 mb-3">
            <a href="@Url.Action("DisplayActiveProjects", "Projects")" style="background-color: #25321c; text-decoration: none;">
            <div id="active-Projects" class="card rounded">
                    <div class="card-header  text-white text-center" style="background-color:#25321c">
                    Incomplete Projects
                </div>
                <div class="card-body text-center">
                    <span style="font-size: 30px;">
                        <i class="fas fa-diagram-project" style="font-size: 30px; margin-bottom: 10px;"></i><br>
                    </span>
                    <span style="font-size: 18px;">@ViewBag.IncompleteCount <br> Incomplete Projects </span>
                </div>
            </div>
        </a>
    </div>

    <div class="col-sm-3 mb-3">
        <a href="@Url.Action("DisplayAllProjects", "Projects")" style="background-color: #c3d5ae; text-decoration: none;">
            <div id="allProjects" class="card rounded">
                <div class="card-header  text-white text-center" style="background-color:  #c3d5ae;">
                    Complete Projects
                </div>
                <div class="card-body text-center">
                    <span style="font-size: 30px;">
                        <i class="fa-solid fa-check" style="font-size: 30px;"></i><br>
                    </span>
                    <span style="font-size: 18px;">@ViewBag.UniqueProjectNamesCount <br> Complete Projects </span>
                </div>
            </div>
        </a>
    </div>
 
    <div class="col-sm-3 mb-3">
        <a href="@Url.Action("DisplayPriority", "Projects")" style="background-color:#ecd4d3; text-decoration: none;">
            <div id="priority-projects" class="card rounded">
                <div class="card-header  text-white text-center" style="background-color:#ecd4d3;">
                    Active Tickets
                </div>
                <div class="card-body text-center">
                    <span style="font-size: 30px;">
                        <i class="fa-solid fa-list" style="font-size: 30px;"></i><br>
                    </span>
                    <span style="font-size: 18px;">@ViewBag.HighPriorityProjects <br> Active Projects </span>
                </div>
            </div>
        </a>
    </div>

    <div class="col-sm-3 mb-3">
        <a href="@Url.Action("DisplayCompletedProjects", "Projects")" style="background-color:    #34afbb; text-decoration: none;">
            <div id="completed-Projects" class="card rounded">
                <div class="card-header  text-white text-center" style="background-color:    #34afbb;">
                    High Priority Projects
                </div>
                <div class="card-body text-center">
                    <span style="font-size: 30px;">
                        <i class="fa-solid fa-star" style="font-size: 30px;"></i><br>
                    </span>
                    <span style="font-size: 18px;">@ViewBag.CompleteCount <br> High Priority Projects </span>
                </div>
            </div>
        </a>
    </div>
</div>



    <p>
        <a href="@Url.Action("Create")" class="btn btn-primary">Create New</a>
    </p>

<div class="table-responsive" style="overflow-x: auto;">
<table id="projectsTable" class="table table-responsive table-bordered">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
               Description
            </th>
            <th>
               Project Name
            </th>
            <th>
               Company
            </th>
            <th>
               Users Assigned
            </th>
            <th>
               Assigned By
            </th>
            <th>
               Status Message
            </th>
           
            <th>
              Priority
            </th>
            <th>
               DueBy
            </th>
        </tr>
    </thead>
    <tbody>
@if (ViewBag.Project != null) 
        {
            @foreach (var item in ViewBag.Project)

		{
			<tr>
       
            
             <td><a href="/Projects/Details/@item.ID">@item.Name</a></td>
           
            <td>
                @item.Description
            </td>
            <td>
                @item.ProjectName
            </td>
            <td>
                @item.Company
            </td>
            <td>
                @item.UsersAssigned
            </td>
            <td>
                @item.AssignedBy
            </td>
            <td>
                @item.StatusMessage
            </td>
         
            <td>
                @item.Priority
            </td>
            <td>
                @item.DueBy
            </td>
          
        </tr>
            }
        }
        else
        { 
        <tr>
		<td colspan="14">No tickets available</td>
			</tr>
		}
    </tbody>
</table>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.js"></script>

<div class="container">
    <div class="chart-container-project1">
        <canvas id="activeProjects" style="max-width:390px; max-height:430px;"></canvas>
        <canvas id="userAssigned" style="max-width:390px; max-height:430px;"></canvas>
    </div>
    <div class="chart-container-project2">
    <canvas id="lineChart" style="max-width:390px; max-height:430px;"></canvas>
    <canvas id="categoryProjects" style="max-width:390px; max-height:430px;"></canvas>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            $.noConflict();
            $('#projectsTable').DataTable();
        });
    </script>
	
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

	<script>
		
		var chartLabels = @Html.Raw(Json.Serialize(ViewBag.ChartLabels));
		var chartData = @Html.Raw(Json.Serialize(ViewBag.ChartData));

		var statusColors = [
            '#c3d5ae',
            '#e8e6e6',
            '#ecd4d3'
		
		];

        var activeProjectsChart = new Chart(document.getElementById('activeProjects'), {
			type: 'pie',
			data: {
				labels: chartLabels,
				datasets: [{
					data: chartData,
					backgroundColor: statusColors
				}]
			},
			options: {
		
			}
		});
	</script>

    <script>
               
    var uniqueMembers = @Html.Raw(Json.Serialize(ViewBag.UniqueMembers));
        var memberOccurrences = @Html.Raw(Json.Serialize(ViewBag.MemberOccurrences));

        var memberColors = [
            '#e8e6e6',
            '#34afbb',
            '#ecd4d3'
        ];

        var ctxUserAssigned = document.getElementById('userAssigned').getContext('2d');
        var memberChart = new Chart(ctxUserAssigned, {
            type: 'bar',
            data: {
                labels: uniqueMembers,
                datasets: [{
                    label: 'Tickets Assigned',
                    data: memberOccurrences,
                    backgroundColor: memberColors.slice(0, uniqueMembers.length),
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                
            }
        });

    </script>
    
    <script>
   
        var ctxLineChart = document.getElementById('lineChart').getContext('2d');
        var lineChart = new Chart(ctxLineChart, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(uniqueMonths)),
                datasets: [{
                    label: 'Number of Projects',
                    data: @Html.Raw(Json.Serialize(numOfProjects)),
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

    </script>


    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
     
        var categoryLabels = @Html.Raw(Json.Serialize(ViewBag.CategoryList));
        var categoryData = @Html.Raw(Json.Serialize(ViewBag.CategoryCt));

        var statusColors = [
            '#f66c50', // Color for completed
            '#ebc354',
                    '#e8e6e6' // Color for in progress
            // Add more colors for additional statuses if needed
        ];

        var activeCategoryChart = new Chart(document.getElementById('categoryProjects'), {
            type: 'doughnut',
            data: {
                labels: categoryLabels,
                datasets: [{
                    data: categoryData,
                    backgroundColor: statusColors
                }]
            },
            options: {
                // Add chart options here if needed
            }
        });
    </script>

    }






<!-- Your HTML content -->
<div id="employeeData">
    <table class="table">
        <thead>
            <tr>
                <th>  </th>
                <th>Name</th>
                <th>Email</th>
                <th> Status </th>
                <!-- Add other column headers here -->
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.Employees != null)
            {
                foreach (var employee in ViewBag.Employees)
                {
                    <tr>
                        <td> <img src="@employee.icon" alt="User Image" /></td>
                        <td>@employee.Name</td>        
                        <td>@employee.Email</td>
                        <td>
                            @if (employee.Availability == "Available")
                            {
                                <button type="button" class="btn btn-success custom-btn">Available</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-danger custom-btn">Unavailable</button>
                            }
                        </td>
                        
                        
                   
                        @*	<td>
                <a asp-action="Edit" asp-route-id="@employee.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@employee.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@employee.ID">Delete</a>
                </td>*@
                        <!-- Add other columns using employee properties -->
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="2">No employee data available</td>
                </tr>
            }
        </tbody>
    </table>
</div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
    $('.custom-btn').on('click', function () {
    var btn = $(this);
    btn.prop('disabled', true); // Disable the clicked button
    btn.text('Processing...'); // Change button text to indicate processing

    var employeeId = btn.data('employee-id'); // Get employee ID from data attribute or any other method

    // Simulated delay for demonstration purposes (replace this with your actual logic)
    setTimeout(function () {
    var newStatus = 'Unavailable'; // Replace with the actual updated status

    // Perform AJAX call to update the server with the new status
    $.ajax({
    url: "/Employees/ChangeUserStatus", // Replace with your server endpoint
    method: 'POST', // Use appropriate HTTP method (POST, PUT, etc.)
    data: { employeeId: employeeId, newStatus: newStatus }, // Send employee ID and new status
    success: function (response) {
 
    },
    error: function (error) {
    
    },
    complete: function () {
                            btn.text(newStatus);
                            btn.prop('disabled', false);
                            btn.css('background-color', 'red');
    }
    });

    }, 2000); 
    });
        });
    </script>
</body>
</html>