@model IEnumerable<PTracking.Models.Project>

@{
    ViewData["Title"] = "Index";
}
<div class="Dashboard row">
    <div class="col-sm-4 mb-3">
        <div class="card rounded" style="background-color: #c3d5ae; color: black;">
            <div class="card-body">
                <h6 class="card-title">
                    <a href="@Url.Action("DisplayActiveProjects", "Projects")" class="text-white"> Incomplete Projects </a>
                </h6>
                <p class="card-text">@ViewBag.IncompleteCount</p>
            </div>
        </div>
    </div>

    <div class="col-sm-4 mb-3">
        <div class="card rounded" style="background-color: #e8e6e6; color: black ;">
            <div class="card-body">
                <h6 class="card-title">
                    <a href="@Url.Action("DisplayAllProjects", "Projects")" , class="text-white"> Total Projects Year to Date </a>
                </h6>
                <p class="card-text">@ViewBag.UniqueProjectNamesCount</p>
            </div>
        </div>
    </div>

    <div class="col-sm-4 mb-3">
        <div class="card rounded" style="background-color: #e8e6e6; color: black ;">
            <div class="card-body">
                <h6 class="card-title">
                    <a href="@Url.Action("DisplayPriority", "Projects")" , class="text-white"> High Priority Projects </a>
                </h6>
                <p class="card-text">@ViewBag.HighPriorityProjects</p>
            </div>
        </div>
    </div>

    <div class="col-sm-4 mb-3">
        <div class="card rounded" style="background-color: #ecd4d3; color: black;">
            <div class="card-body">
                <h6 class="card-title">
                    <a href="@Url.Action("DisplayCompletedProjects", "Projects")" class="text-white"> Complete Projects </a>
                </h6>
                <p class="card-text">@ViewBag.CompleteCount</p>
            </div>
        </div>
    </div>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
               Description
            </th>
            <th>
               Project Name
            </th>
            <th>
               Company
            </th>
            <th>
               Users Assigned
            </th>
            <th>
               Assigned By
            </th>
            <th>
               Status
            </th>
            <th>
               Status Message
            </th>
           
            <th>
              Priority
            </th>
            <th>
              Category
            </th>
            <th>
               DueBy
            </th>

            <th>
               icon
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@if (ViewBag.Project != null) 
        {
            @foreach (var item in ViewBag.Project)

		{
			<tr>
       
            <td>
                @item.Name
            </td>
            <td>
                @item.Description
            </td>
            <td>
                @item.ProjectName
            </td>
            <td>
                @item.Company
            </td>
            <td>
                @item.UsersAssigned
            </td>
            <td>
                @item.AssignedBy
            </td>
            <td>
                @item.Status
            </td>
            <td>
                @item.StatusMessage
            </td>
         
            <td>
                @item.Priority
            </td>
            <td>
                @item.Category
            </td>
            <td>
                @item.DueBy
            </td>
            <td>
                @item.icon
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
            }
        }
        else
        { 
        <tr>
		<td colspan="14">No tickets available</td>
			</tr>
		}
    </tbody>
</table>


<div class="chart-container">

    <canvas id="activeProjects" style="max-width:390px; max-height:430px;"></canvas>
    <canvas id="userAssigned" style="max-width:390px; max-height:430px;"></canvas>
    <canvas id="lineChart" style="max-width:390px; max-height:430px;"></canvas>
    <canvas id="categoryProjects" style="max-width:390px; max-height:430px;"></canvas>

</div>
@{
    var uniqueMonths = ViewBag.UniqueMonths as List<string>;
    var numOfProjects = ViewBag.NumOfProjects as List<int>;
}

@section Scripts {
	<!-- Include necessary libraries -->
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

	<script>
		// Get data from ViewBag
		var chartLabels = @Html.Raw(Json.Serialize(ViewBag.ChartLabels));
		var chartData = @Html.Raw(Json.Serialize(ViewBag.ChartData));

		var statusColors = [
            '#c3d5ae',
            '#e8e6e6',
            '#ecd4d3'
			// Add more colors for additional statuses if needed
		];

        var activeProjectsChart = new Chart(document.getElementById('activeProjects'), {
			type: 'pie',
			data: {
				labels: chartLabels,
				datasets: [{
					data: chartData,
					backgroundColor: statusColors
				}]
			},
			options: {
				// Add chart options here if needed
			}
		});
	</script>

    <script>
               
                var uniqueMembers = @Html.Raw(Json.Serialize(ViewBag.UniqueMembers));
        var memberOccurrences = @Html.Raw(Json.Serialize(ViewBag.MemberOccurrences));

        var memberColors = [
            '#e8e6e6',
            '#34afbb',
            '#ecd4d3'
        ];

        var ctxUserAssigned = document.getElementById('userAssigned').getContext('2d');
        var memberChart = new Chart(ctxUserAssigned, {
            type: 'bar',
            data: {
                labels: uniqueMembers,
                datasets: [{
                    label: 'Tickets Assigned',
                    data: memberOccurrences,
                    backgroundColor: memberColors.slice(0, uniqueMembers.length),
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                // Add chart options here if needed
            }
        });

    </script>
    
    <script>
   
            var ctxLineChart = document.getElementById('lineChart').getContext('2d');

        var lineChart = new Chart(ctxLineChart, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(uniqueMonths)),
                datasets: [{
                    label: 'Number of Projects',
                    data: @Html.Raw(Json.Serialize(numOfProjects)),
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

    </script>


    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Get data from ViewBag
        var categoryLabels = @Html.Raw(Json.Serialize(ViewBag.CategoryList));
        var categoryData = @Html.Raw(Json.Serialize(ViewBag.CategoryCt));

        var statusColors = [
            '#f66c50', // Color for completed
            '#ebc354',
                    '#e8e6e6' // Color for in progress
            // Add more colors for additional statuses if needed
        ];

        var activeCategoryChart = new Chart(document.getElementById('categoryProjects'), {
            type: 'doughnut',
            data: {
                labels: categoryLabels,
                datasets: [{
                    data: categoryData,
                    backgroundColor: statusColors
                }]
            },
            options: {
                // Add chart options here if needed
            }
        });
    </script>

    }






<!-- Your HTML content -->
<div id="employeeData">
    <table class="table">
        <thead>
            <tr>
                <th>  </th>
                <th>Name</th>
                <th>Email</th>
                <th> Status </th>
                <!-- Add other column headers here -->
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.Employees != null)
            {
                foreach (var employee in ViewBag.Employees)
                {
                    <tr>
                        <td> <img src="@employee.icon" alt="User Image" /></td>
                        <td>@employee.Name</td>        
                        <td>@employee.Email</td>
                        <td>
                            @if (employee.Availability == "Available")
                            {
                                <button type="button" class="btn btn-success custom-btn">Available</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-danger custom-btn">Unavailable</button>
                            }
                        </td>
                        
                        
                   
                        @*	<td>
                <a asp-action="Edit" asp-route-id="@employee.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@employee.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@employee.ID">Delete</a>
                </td>*@
                        <!-- Add other columns using employee properties -->
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="2">No employee data available</td>
                </tr>
            }
        </tbody>
    </table>
</div>
